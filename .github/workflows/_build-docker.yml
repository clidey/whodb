name: Build Docker Images

on:
  workflow_call:
    inputs:
      version:
        description: 'Version to build'
        required: true
        type: string
      edition:
        description: 'Edition to build (ce or ee)'
        required: false
        type: string
        default: 'ce'
    outputs:
      amd64-artifact:
        description: 'AMD64 Docker artifact name'
        value: docker-image-amd64
      arm64-artifact:
        description: 'ARM64 Docker artifact name'
        value: docker-image-arm64

jobs:
  build-docker:
    name: Build Docker (${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            platform: linux/amd64
            arch: amd64
          - runner: ubuntu-24.04-arm
            platform: linux/arm64
            arch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('frontend/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Cache frontend build
        id: frontend-cache
        uses: actions/cache@v4
        with:
          path: frontend/build
          key: frontend-build-${{ inputs.edition }}-${{ hashFiles('frontend/package.json', 'frontend/pnpm-lock.yaml', 'frontend/tsconfig.json') }}
          restore-keys: |
            frontend-build-${{ inputs.edition }}-

      - name: Build frontend if needed
        if: steps.frontend-cache.outputs.cache-hit != 'true'
        working-directory: ./frontend
        env:
          CYPRESS_INSTALL_BINARY: "0"
        run: |
          pnpm install
          pnpm run build:${{ inputs.edition }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./core/Dockerfile
          platforms: ${{ matrix.platform }}
          push: false
          tags: clidey/whodb:${{ inputs.version }}-${{ matrix.arch }}
          outputs: type=docker,dest=/tmp/whodb-docker-${{ matrix.arch }}.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Upload Docker artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-${{ matrix.arch }}
          path: /tmp/whodb-docker-${{ matrix.arch }}.tar
          retention-days: 1